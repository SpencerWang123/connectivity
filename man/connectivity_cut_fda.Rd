% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/connectivity_cut_fda.R
\name{connectivity_cut_fda}
\alias{connectivity_cut_fda}
\title{connectivity_cut_fda}
\usage{
connectivity_cut_fda(
  adj_mat,
  tuning_in = 0.5,
  tuning_out = 0.5,
  alpha = 0.3,
  seeds = 10,
  miniest_cluster_scale = 10,
  knot_gap = 30,
  basis_order = 4,
  memory = 60
)
}
\arguments{
\item{tuning_in}{weight of the in-connect when evaluating the connectivity. float in \link{0,1}}

\item{tuning_out}{weight of the out-connect when evaluating the connectivity. float in \link{0,1}}

\item{alpha}{smooth parameter which reflects how much the connectivity rely on the temp result. float in \link{0,1}}

\item{miniest_cluster_scale}{the minimum scale of the community could be recognized}

\item{knot_gap}{knot_gap used to generate spline basis in fitting the connectivity function}

\item{basis_order}{basis order used to generate spline basis in fittinng the connectivity function}

\item{memory}{memory length, which decides how many recent nodes are taken into consideration when calculating the connectivity. int}

\item{adjmat}{adjacency matrix of a network which should have identical colnames and rownames}

\item{seed}{random seed used to initialize the first node in Node seq}
}
\value{
node_seq: node_seq

cluster: nodes and their community label in order of the truth community partition

connect_record_smooth: smoothed connectivity seq according to parameter alpha
}
\description{
function to generate node seq and the corresponding connectivity seq on the given network.
this algorithm will fit the connectivity seq with a continuous functional object called connectivity function.
In this algorithm the connectivity function will be cut at where its first derivative equals to 0 while the second derivative is positive.
the cut of the connectivity function will return a partition of node seq accordingly which served as community detection result.
}
